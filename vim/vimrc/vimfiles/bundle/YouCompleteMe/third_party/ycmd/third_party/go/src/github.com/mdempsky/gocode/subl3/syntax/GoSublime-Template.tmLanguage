<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>foldingStartMarker</key>
	<string>\{\{\s*(?:if|with|range)\b</string>
	<key>foldingStopMarker</key>
	<string>\{\{\s*(?:else|end)\b</string>
	<key>name</key>
	<string>GoSublime: Template</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>\{\{</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.embedded.begin.gotemplate</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\}\}</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.embedded.end.gotemplate</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>:=</string>
					<key>name</key>
					<string>keyword.operator.initialize.gotemplate</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\|</string>
					<key>name</key>
					<string>keyword.operator.pipe.gotemplate</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[.$][\w]*</string>
					<key>name</key>
					<string>variable.other.gotemplate</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(if|else|range|template|with|end|nil|with|define)\b</string>
					<key>name</key>
					<string>keyword.control.gotemplate</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(and|call|html|index|js|len|not|or|print|printf|println|urlquery|eq|ne|lt|le|gt|ge)\b</string>
					<key>name</key>
					<string>support.function.builtin.gotemplate</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.gotemplate</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.gotemplate</string>
						</dict>
					</dict>
					<key>end</key>
					<string>"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.gotemplate</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.gotemplate</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string_escaped_char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>`</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.gotemplate</string>
						</dict>
					</dict>
					<key>end</key>
					<string>`</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.gotemplate</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.raw.gotemplate</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_placeholder</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>string_escaped_char</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\(\\|[abfnrtv'"]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8}|[0-7]{3})</string>
					<key>name</key>
					<string>constant.character.escape.gotemplate</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>invalid.illegal.unknown-escape.gotemplate</string>
				</dict>
			</array>
		</dict>
		<key>string_placeholder</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?x)%
                        (\d+\$)?                                    # field (argument #)
                        [#0\- +']*                                  # flags
                        [,;:_]?                                     # separator character (AltiVec)
                        ((-?\d+)|\*(-?\d+\$)?)?                     # minimum field width
                        (\.((-?\d+)|\*(-?\d+\$)?)?)?                # precision
                        [diouxXDOUeEfFgGaAcCsSqpnvtTbyYhHmMzZ%]     # conversion type
                    </string>
					<key>name</key>
					<string>constant.other.placeholder.gotemplate</string>
				</dict>
				<dict>
					<key>match</key>
					<string>%</string>
					<key>name</key>
					<string>invalid.illegal.placeholder.gotemplate</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.gotemplate</string>
	<key>uuid</key>
	<string>43606de8-c638-11e2-b661-6711676f99ca</string>
</dict>
</plist>
